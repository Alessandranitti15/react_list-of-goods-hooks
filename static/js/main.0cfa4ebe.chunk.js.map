{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","goods","visibleGoods","sort","g1","g2","LENGTH","length","ALPHABET","localeCompare","reverse","getReorderedGoods","className","type","onClick","cn","prevIsReversed","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAiCE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EA9BR,SACEA,EACAJ,EACAE,GAEA,IAAMG,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQR,GACN,KAAKL,EAASc,OACZ,OAAOF,EAAGG,OAASF,EAAGE,OAExB,KAAKf,EAASgB,SACZ,OAAOJ,EAAGK,cAAcJ,GAE1B,QACE,OAAO,MAITN,GACFG,EAAaQ,UAGRR,EAMOS,CAAkBlB,EAAiBI,EAAUE,GAM3D,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMhB,EAAYN,EAASgB,WACpCI,UAAWG,IAAG,iBAAkB,CAC9B,WAAYlB,IAAaL,EAASgB,WAJtC,iCAUA,wBACEK,KAAK,SACLC,QAAS,kBAAMhB,EAAYN,EAASc,SACpCM,UAAWG,IAAG,oBAAqB,CACjC,WAAYlB,IAAaL,EAASc,SAJtC,4BAUA,wBACEO,KAAK,SACLD,UAAWG,IAAG,oBAAqB,CACjC,YAAahB,IAEfe,QAAS,kBAAMd,GAAc,SAAAgB,GAAc,OAAKA,MALlD,sBAUEnB,GAAYE,IAEV,wBACEc,KAAK,SACLC,QAAS,kBAzCnBhB,EAAYN,EAASI,WACrBI,GAAc,IAyCJY,UAAU,4BAHZ,sBAUN,6BACE,6BACGX,EAAMgB,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,cCzGpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0cfa4ebe.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n  const goods = getReorderedGoods(goodsFromServer, sortType, isReversed);\n  const resetButton = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortType(SortType.ALPHABET)}\n          className={cn('button is-info', {\n            'is-light': sortType !== SortType.ALPHABET,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortType(SortType.LENGTH)}\n          className={cn('button is-success', {\n            'is-light': sortType !== SortType.LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={() => setIsReversed(prevIsReversed => !prevIsReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortType || isReversed)\n          && (\n            <button\n              type=\"button\"\n              onClick={() => resetButton()}\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        <ul>\n          {goods.map(good => (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}